{"version":3,"file":"static/js/503.77c3bdea.chunk.js","mappings":"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","sources":["components/App/App.styled.js","components/ContactHeader/ContactHeader.styled.js","components/ContactHeader/ContactHeader.jsx","components/ContactList/ContactList.styled.js","webpack://react-homework-template/./src/components/ContactItem/EditForm.module.css?19ab","components/ContactItem/ContactItem.styled.js","components/AvatarComponent/AvatarComponent.jsx","components/ContactItem/ContactItem.jsx","redux/selectors.js","components/ContactList/ContactList.jsx","components/Filter/Filer.styled.js","components/Filter/Filter.jsx","components/Loader/Loader.styled.js","components/Loader/Loader.jsx","components/AddContactIcon/AddContactIcon.styled.js","components/AddContactIcon/AddContactIcon.jsx","components/AddContactModal/AddContactModal.styled.js","webpack://react-homework-template/./src/components/ContactFormModal/ContactFormModal.module.css?1c0a","components/ContactFormModal/ContactFormModal.jsx","components/AddContactModal/AddContactModal.jsx","components/ToolTip/ToolTip.styled.js","components/ToolTip/ToolTip.jsx","redux/contacts/contacts-selectors.js","pages/Contacts.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Conatiner = styled.div`\n  position: relative;\n  text-align: center;\n  /* height: 100vh; */\n  /* max-width: 1134px; */\n  padding-left: 25px;\n  padding-right: 25px;\n  padding-bottom: 15px;\n  margin-top: 5px;\n  /* display: flex; */\n  flex-direction: column;\n  justify-content: start;\n  align-items: center;\n  font-size: 38px;\n  /* color: #1c1b1a; */\n  color: white;\n  /* font-weight: 700; */\n  background-color: #39526a;\n  /* border: 2px solid rgba(47, 46, 45, 0.5); */\n  /* border-radius: 10px; */\n  /* margin: 50px auto; */\n  /* -webkit-box-shadow: 4px 4px 20px -7px rgba(0, 0, 0, 0.45);\n  -moz-box-shadow: 4px 4px 20px -7px rgba(0, 0, 0, 0.45);\n  box-shadow: 4px 4px 20px -7px rgba(0, 0, 0, 0.45); */\n`;\n\nexport const Note = styled.p`\n  display: flex;\n  align-items: center;\n  gap: 15px;\n  font-size: 28px;\n  color: gray;\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`;\nexport const MainWrapper = styled.div`\n  /* gap: 15px;\n  width: 100%;\n  display: flex;\n  justify-content: space-between; */\n`;\n","import styled from '@emotion/styled';\n\nexport const InnerHeader = styled.div`\n  /* padding: 0 10px; */\n  border-bottom: 1px solid bisque;\n  width: 100%;\n  display: flex;\n  align-items: center;\n  margin-bottom: 25px;\n`;\n","import { InnerHeader } from './ContactHeader.styled';\n\nexport const Header = ({ text, children }) => {\n  return (\n    <InnerHeader>\n      <h5 style={{ margin: '0', marginRight: 'auto' }}>{text}</h5>\n\n      {children}\n    </InnerHeader>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const ListContainer = styled.div`\n  height: 60%;\n`;\nexport const List = styled.ul`\n  /* width: 75%; */\n  /* min-height: 700px; */\n  text-align: center;\n  /* margin-top: 25px; */\n  border: 1px solid rgba(9, 19, 17, 0.1);\n  border-radius: 10px;\n\n  -webkit-box-shadow: inset 0px 0px 17px 9px rgba(0, 0, 0, 0.08);\n  -moz-box-shadow: inset 0px 0px 17px 9px rgba(0, 0, 0, 0.08);\n  box-shadow: inset 0px 0px 17px 9px rgba(0, 0, 0, 0.08);\n  padding: 25px 10px;\n  margin-bottom: 30px;\n`;\n\nexport const ListItem = styled.li`\n  font-size: 18px;\n  margin-bottom: 5px;\n  display: flex;\n  align-items: center;\n  gap: 25px;\n`;\n\nexport const ListHeader = styled.div`\n  /* width: 100%; */\n  font-size: 22px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  border: 1px solid green;\n  border-radius: 8px;\n  margin-bottom: 15px;\n  padding: 10px;\n`;\n\n// export const Table = styled.table`\n//   width: 75%;\n//   border-collapse: collapse;\n//   margin: 20px; /* Пример отступа вокруг таблицы */\n// `;\n\n// export const TableHeader = styled.thead`\n//   background-color: #f2f2f2; /* Пример цвета фона заголовка */\n// `;\n\n// export const TableBody = styled.tbody``;\n\n// export const TableRow = styled.tr`\n//   &:nth-of-type(even) {\n//     /* Пример чередования цветов строк */\n//   }\n// `;\n\n// export const TableCell = styled.td`\n//   padding: 8px; /* Пример внутренних отступов в ячейках */\n//   border: 1px solid #ddd; /* Пример границы ячеек */\n// `;\n\n/* Дополнительные стили для ListItem могут быть добавлены в зависимости от вашего дизайна */\n","// extracted by mini-css-extract-plugin\nexport default {\"login-box\":\"EditForm_login-box__fmBEW\",\"user-box\":\"EditForm_user-box__oNl-s\"};","import styled from '@emotion/styled';\nimport { CiUser } from 'react-icons/ci';\n\nexport const ListItemStyled = styled.li`\n  /* width: 100%; */\n  /* height: 65px; */\n  font-size: 20px;\n  margin-bottom: 5px;\n  padding-top: 15px;\n  display: flex;\n  flex-direction: column;\n  /* align-items: start; */\n  gap: 50%;\n\n  flex-wrap: wrap;\n\n  align-items: center;\n\n  justify-content: start;\n\n  border: 1px solid rgb(216, 216, 216, 0.4);\n  border-radius: 10px;\n  padding: 5px 10px;\n  background-color: ${props => (props.isChecked ? '#555659' : ' #39526A')};\n`;\n\nexport const Name = styled.p`\n  width: 250px;\n  text-align: start;\n  /* margin-right: auto; */\n  /* border-right: 1px solid black; */\n`;\n\nexport const Phone = styled.p`\n  /* width: 90%; */\n  /* margin-right: auto; */\n  text-align: start;\n  /* border-right: 1px solid black; */\n`;\n\nexport const Avatar = styled(CiUser)`\n  width: 35px;\n  height: 35px;\n  padding: 15px;\n  border-radius: 50%;\n  margin: 0px 15px;\n\n  /* background-color: ${props => props.color}; */\n`;\n\nexport const AdditionalInfo = styled.ul`\n  width: 100%;\n  display: flex;\n  /* flex-wrap: wrap; */\n  gap: 200px;\n  /* flex-direction: column; */\n  align-items: start;\n  justify-content: flex-end;\n  border-top: 1px solid red;\n  flex-direction: row-reverse;\n  align-items: center;\n`;\nexport const InfoItem = styled.li`\n  color: gray;\n  .div {\n    display: flex;\n  }\n`;\n\nexport const EditLink = styled.p``;\n","import { Avatar } from 'components/ContactItem/ContactItem.styled';\nimport React, { useState, useEffect } from 'react';\n\nfunction getRandomColor() {\n  const randomColor = Math.floor(Math.random() * 16777215).toString(16);\n\n  return '#' + '0'.repeat(6 - randomColor.length) + randomColor;\n}\n\nconst getFirstLetter = name => name.split('')[0];\n\nconst AvatarComponent = ({ isChecked, isExpanded, name }) => {\n  const [avatarColor, setAvatarColor] = useState('');\n\n  useEffect(() => {\n    if (!isChecked || !isExpanded) {\n      const color = getRandomColor();\n      setAvatarColor(color);\n    }\n  }, [isChecked, isExpanded]);\n\n  return (\n    <Avatar style={{ color: avatarColor, width: '50px', height: '50px' }}>\n      {/* Ваш контент */}\n      <h1>{getFirstLetter(name)}</h1>\n    </Avatar>\n  );\n};\n\nexport default AvatarComponent;\n","import { FaTrashAlt } from 'react-icons/fa';\n// import { CiUser } from 'react-icons/ci';\n// import { FaChevronDown } from 'react-icons/fa6';\nimport { FaUserEdit } from 'react-icons/fa';\nimport css from './EditForm.module.css';\n\nimport {\n  AdditionalInfo,\n  InfoItem,\n  ListItemStyled,\n  Name,\n  Phone,\n} from './ContactItem.styled';\nimport { useEffect, useRef, useState } from 'react';\n// import { Button } from 'components/AddContactIcon/AddContactIcon.styled';\n// import { Link } from 'react-router-dom';\n// import { getRandomColor } from 'helpers/random-color';\nimport AvatarComponent from 'components/AvatarComponent/AvatarComponent';\n// import { useDispatch } from 'react-redux';\n// import { selectContacts } from '../../redux/contacts/contacts-selectors';\n// import {\n//   editContact,\n//   fetchContacts,\n// } from '../../redux/contacts/contacts-operations';\n\nexport const ListItem = ({ id, name, number, handlerClick, handlerEdit }) => {\n  const [isChecked, setIsChecked] = useState(false);\n  const [isExpanded, setIsExpanded] = useState(false);\n\n  // const dispatch = useDispatch();\n  const editInfoRef = useRef();\n\n  useEffect(() => {\n    const handleClickOutside = event => {\n      if (editInfoRef.current && !editInfoRef.current.contains(event.target)) {\n        setIsExpanded(false);\n      }\n    };\n\n    document.addEventListener('mousedown', handleClickOutside);\n\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, []);\n  // const [contact, setContact] = useState({});\n  // const [contact, setContact] = useState({});\n\n  const [formData, setFormData] = useState({\n    name,\n    number,\n    id,\n  });\n\n  const handleCheckboxChange = e => {\n    setIsChecked(prevChecked => !prevChecked);\n  };\n\n  const handleToggleExpand = () => {\n    setIsExpanded(!isExpanded);\n  };\n\n  // const onSubmit = e => {\n  //   e.preventDefault();\n  //   // console.log(formData);\n\n  //   dispatch(editContact(formData));\n  //   dispatch(fetchContacts());\n  //   // setContact(formData);\n  // };\n\n  const onChange = e => {\n    const { name, value } = e.target;\n    setFormData(prevData => ({\n      ...prevData,\n      [name]: value,\n    }));\n  };\n\n  return (\n    <>\n      <ListItemStyled isChecked={isChecked} ref={editInfoRef}>\n        <div\n          style={{\n            display: 'flex',\n            width: '100%',\n            justifyContent: 'space-between',\n          }}\n        >\n          <div style={{ display: 'flex', alignItems: 'center' }}>\n            <input\n              id={id}\n              type=\"checkbox\"\n              checked={isChecked}\n              onChange={handleCheckboxChange}\n            />\n            <AvatarComponent name={name}></AvatarComponent>\n            {/* <Avatar color={getRandomColor()} /> */}\n            {/* <CiUser /> */}\n            <Name>{name}</Name>\n          </div>\n          <div style={{ display: 'flex', alignItems: 'center' }}>\n            <Phone>{number}</Phone>\n\n            <FaTrashAlt\n              style={{\n                cursor: 'pointer',\n                margin: '0 35px',\n              }}\n              onClick={() => {\n                handlerClick(id);\n              }}\n            ></FaTrashAlt>\n            <FaUserEdit\n              style={{\n                cursor: 'pointer',\n                color: '#E05160',\n              }}\n              onClick={handleToggleExpand}\n            />\n          </div>\n        </div>\n        {isExpanded && (\n          <>\n            <AdditionalInfo>\n              <div\n                style={{\n                  display: 'flex',\n                  flexDirection: 'column',\n                  gap: 20,\n                  alignItems: 'start',\n                  paddingTop: 10,\n                }}\n              >\n                <InfoItem>\n                  <p>Email:</p> {''}\n                </InfoItem>\n                <InfoItem>\n                  <p>City:</p> {''}\n                </InfoItem>\n                <InfoItem>\n                  <p>Job:</p> {''}\n                </InfoItem>\n                <InfoItem>\n                  <p>Position:</p> {''}\n                </InfoItem>\n                <InfoItem>\n                  <p>Category:</p> {''}\n                </InfoItem>\n              </div>\n              {/*  */}\n\n              <div className={css['login-box']}>\n                <form\n                  // action=\"submit\"\n                  onSubmit={e => {\n                    e.preventDefault();\n                    handlerEdit(formData);\n                  }}\n                >\n                  <div className={css['user-box']}>\n                    <input\n                      type=\"text\"\n                      required=\"\"\n                      value={formData.name}\n                      onChange={onChange}\n                      name=\"name\"\n                      placeholder=\"\"\n                    />\n                    <label>Name</label>\n                  </div>\n                  <div className={css['user-box']}>\n                    <input\n                      type=\"text\"\n                      required=\"\"\n                      placeholder=\"\"\n                      value={formData.number}\n                      onChange={onChange}\n                      name=\"number\"\n                    />\n                    <label>Number</label>\n                  </div>\n                  <center>\n                    <button type=\"submit\" style={{ color: 'tomato' }}>\n                      Edit contact\n                      <span></span>\n                    </button>\n                  </center>\n                </form>\n              </div>\n            </AdditionalInfo>\n          </>\n        )}\n      </ListItemStyled>\n    </>\n  );\n};\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.contacts;\n\nexport const selectFilter = state => state.filter;\n\nexport const selectLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase().trim())\n    );\n  }\n);\n","import { useDispatch, useSelector } from 'react-redux';\n\nimport { List, ListHeader } from './ContactList.styled';\nimport { ListItem } from 'components/ContactItem/ContactItem';\n\nimport { selectVisibleContacts } from '../../redux/selectors';\nimport {\n  deleteContact,\n  editContact,\n} from '../../redux/contacts/contacts-operations';\n// import { ListItemStyled } from 'components/ContactItem/ContactItem.styled';\nimport { useState } from 'react';\n\nexport const ContactList = () => {\n  const visibleContacts = useSelector(selectVisibleContacts);\n  const dispatch = useDispatch();\n  const [isCheckedAll, setIsheckedAll] = useState(false);\n\n  // console.log(visibleContacts);\n  const onEditContact = async data => {\n    dispatch(editContact(data));\n  };\n\n  const onDeliteContact = id => {\n    dispatch(deleteContact(id));\n  };\n\n  const handleCheckboxChange = () => {\n    setIsheckedAll(!isCheckedAll);\n  };\n\n  const handleDeleteSelected = () => {};\n\n  return (\n    <>\n      {/* <h4>{title}</h4> */}\n      <List>\n        <ListHeader>\n          <input\n            style={{ marginRight: 35, position: 'absolute' }}\n            type=\"checkbox\"\n            checked={isCheckedAll}\n            onChange={handleCheckboxChange}\n          />\n          <p style={{ marginRight: 35, marginLeft: 35 }}>Name</p>\n          {isCheckedAll && (\n            <span\n              style={{\n                display: 'flex',\n                fontSize: 14,\n                gap: 10,\n                marginRight: 'auto',\n              }}\n            >\n              <button\n                style={{ color: 'tomato' }}\n                onClick={handleDeleteSelected}\n              >\n                Delete Selected\n              </button>\n            </span>\n          )}\n\n          <p style={{ marginRight: 100 }}> Pnone number</p>\n        </ListHeader>\n        {visibleContacts.map(({ name, id, number }) => (\n          <ListItem\n            checkedAll={isCheckedAll}\n            key={id}\n            name={name}\n            number={number}\n            handlerClick={onDeliteContact}\n            handlerEdit={onEditContact}\n            id={id}\n          ></ListItem>\n        ))}\n      </List>\n    </>\n  );\n};\n\n//\n","import styled from '@emotion/styled';\nimport { CiFilter } from 'react-icons/ci';\n\nexport const FilterWrapper = styled.div`\n  position: relative;\n`;\nexport const Input = styled.input`\n  border-radius: 10px;\n  border: none;\n  height: 30px;\n  padding: 0px 15px 0px 25px;\n  margin-bottom: 20px;\n`;\n\nexport const FilterIcon = styled(CiFilter)`\n  position: absolute;\n  top: 11px;\n  left: 4px;\n  width: 20px;\n  color: black;\n`;\n","import { useDispatch } from 'react-redux';\nimport { setFilter } from '../../redux/filter/filterSlise';\n\nimport { Input, FilterWrapper, FilterIcon } from './Filer.styled';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const onFilterInputChange = e => {\n    dispatch(setFilter(e.currentTarget.value));\n  };\n\n  return (\n    <FilterWrapper>\n      <Input\n        type=\"text\"\n        placeholder=\"Enter name...\"\n        onChange={onFilterInputChange}\n      />\n      <FilterIcon></FilterIcon>\n    </FilterWrapper>\n  );\n};\n","import styled from '@emotion/styled';\nexport const LoaderWrapper = styled.span`\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  z-index: 99;\n`;\n","import { Circles } from 'react-loader-spinner';\nimport { LoaderWrapper } from './Loader.styled';\n\nexport const LoadingSpinner = () => {\n  return (\n    <LoaderWrapper>\n      <Circles />\n    </LoaderWrapper>\n  );\n};\n","import styled from 'styled-components';\nimport { FaPlus } from 'react-icons/fa';\n\nexport const AddIcon = styled(FaPlus)`\n  position: absolute;\n  top: -15px;\n  right: -4px;\n  width: 15px;\n  cursor: pointer;\n  transition: all 0.3s ease;\n\n  :hover {\n    scale: 1.15;\n  }\n`;\n\nexport const Text = styled.p`\n  font-size: 12px;\n  /* margin-bottom: 10px; */\n`;\n\nexport const Container = styled.div`\n  position: relative;\n  right: 19px;\n  display: flex;\n  align-items: center;\n  margin-left: 45px;\n`;\nexport const Button = styled.button`\n  /* width: 45px; */\n  /* height: 45px; */\n  border-radius: 50%;\n  border: none;\n  background-color: transparent;\n  transition: all 0.3s ease;\n`;\n","import { AddIcon, Button, Container } from './AddContactIcon.styled';\n\nconst AddContactIcon = ({ eventHandler }) => {\n  return (\n    <Container onClick={() => eventHandler()}>\n      <Button>\n        <svg\n          fill=\"none\"\n          viewBox=\"0 0 24 24\"\n          height=\"40\"\n          width=\"40\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <path\n            strokeLinejoin=\"round\"\n            fill=\"#707277\"\n            strokeLinecap=\"round\"\n            strokeWidth=\"2\"\n            stroke=\"#707277\"\n            d=\"M6.57757 15.4816C5.1628 16.324 1.45336 18.0441 3.71266 20.1966C4.81631 21.248 6.04549 22 7.59087 22H16.4091C17.9545 22 19.1837 21.248 20.2873 20.1966C22.5466 18.0441 18.8372 16.324 17.4224 15.4816C14.1048 13.5061 9.89519 13.5061 6.57757 15.4816Z\"\n          ></path>\n          <path\n            strokeWidth=\"2\"\n            fill=\"#707277\"\n            stroke=\"#707277\"\n            d=\"M16.5 6.5C16.5 8.98528 14.4853 11 12 11C9.51472 11 7.5 8.98528 7.5 6.5C7.5 4.01472 9.51472 2 12 2C14.4853 2 16.5 4.01472 16.5 6.5Z\"\n          ></path>\n        </svg>\n      </Button>\n\n      <AddIcon style={{ color: '#E05160' }} />\n    </Container>\n  );\n};\n\nexport default AddContactIcon;\n","import styled from '@emotion/styled';\n\nexport const Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.8);\n  /* z-index: 1200; */\n`;\n\nexport const MolalForm = styled.div`\n  max-width: calc(100vw - 48px);\n  max-height: calc(100vh - 24px);\n  width: 500px;\n  height: 500px;\n  background-color: aqua;\n`;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ContactFormModal_container__bR-3i\",\"form\":\"ContactFormModal_form__I1YUt\",\"input-box\":\"ContactFormModal_input-box__+K8sT\",\"select-box\":\"ContactFormModal_select-box__mC4Fy\",\"column\":\"ContactFormModal_column__2msvk\",\"gender-box\":\"ContactFormModal_gender-box__p5wMu\",\"gender-option\":\"ContactFormModal_gender-option__DesbW\",\"gender\":\"ContactFormModal_gender__c+5sV\",\"address\":\"ContactFormModal_address__aY1rO\",\"close-button\":\"ContactFormModal_close-button__NNM7R\"};","import React, { useState } from 'react';\nimport css from './ContactFormModal.module.css';\nimport { IoCloseSharp } from 'react-icons/io5';\n\nimport { useDispatch } from 'react-redux';\nimport { addContact } from '../../redux/contacts/contacts-operations';\nimport { nanoid } from 'nanoid';\n\nconst ContactFormModal = ({ closeModal }) => {\n  const dispatch = useDispatch();\n  // const contacts = useSelector(selectContacts);\n\n  const [errors, setErrors] = useState({\n    name: '',\n    number: '',\n  });\n\n  const [formData, setFormData] = useState({\n    name: '',\n    number: '',\n    id: '',\n  });\n\n  const validateName = name => {\n    if (name.trim().length < 2) {\n      return 'Name should be at least 2 characters long';\n    }\n    return '';\n  };\n\n  const validateNumber = number => {\n    const regex = /^\\+38 \\(\\d{6}\\)$/;\n\n    if (!regex.test(number)) {\n      return 'Phone number should be in the format +38 (123456)';\n    }\n\n    return '';\n  };\n\n  const onChange = e => {\n    const { name, value } = e.target;\n\n    if (name === 'name') {\n      setErrors({ ...errors, name: validateName(value) });\n    } else if (name === 'number') {\n      setErrors({ ...errors, number: validateNumber(value) });\n    }\n    setFormData(prevData => ({\n      ...prevData,\n      [name]: value,\n      id: nanoid(),\n    }));\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    console.log(formData);\n    dispatch(addContact(formData));\n\n    reset();\n    closeModal();\n  };\n\n  const reset = () => {\n    setFormData({\n      name: '',\n      number: '',\n      category: '',\n    });\n  };\n\n  return (\n    <section className={`${css.container}`}>\n      <button className={css['close-button']} onClick={closeModal}>\n        <IoCloseSharp />\n      </button>\n      <header>New Contact</header>\n      <form className={`${css.form}`} onSubmit={onSubmit}>\n        <div className={css['input-box']}>\n          <label>Full Name</label>\n          <input\n            required=\"\"\n            placeholder=\"Enter full name\"\n            type=\"text\"\n            name=\"name\"\n            value={formData.name}\n            onChange={onChange}\n          />\n          {errors.name && <span>{errors.name}</span>}\n        </div>\n        <div className={css['column']}>\n          <div className={css['input-box']}>\n            <label>Phone Number</label>\n            <input\n              required=\"\"\n              placeholder=\"Enter phone number\"\n              type=\"tel\"\n              name=\"number\"\n              value={formData.number}\n              onChange={onChange}\n            />\n            {errors.name && <span>{errors.number}</span>}\n          </div>\n        </div>\n\n        <button type=\"submit\">Submit</button>\n      </form>\n    </section>\n  );\n};\n\nexport default ContactFormModal;\n","import { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\n\nimport { Overlay } from './AddContactModal.styled';\nimport ContactFormModal from '../ContactFormModal/ContactFormModal';\n\nconst modalRoot = document.getElementById('modal-root');\n\nconst AddContactModal = ({ closeModal }) => {\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown);\n    return () => window.removeEventListener('keydown', handleKeyDown);\n  });\n\n  const handleKeyDown = e => {\n    if (e.code === 'Escape') {\n      closeModal();\n    }\n  };\n\n  const handleBackDropClick = e => {\n    if (e.target.id === 'overlay') closeModal();\n  };\n\n  return createPortal(\n    <Overlay id=\"overlay\" onClick={handleBackDropClick}>\n      <ContactFormModal closeModal={closeModal}></ContactFormModal>\n    </Overlay>,\n    modalRoot\n  );\n};\n\nexport default AddContactModal;\n","import styled, { keyframes } from 'styled-components';\nimport { PiArrowBendRightUpThin } from 'react-icons/pi';\n\nconst bounceAnimation = keyframes`\n  0%, 20%, 50%, 80%, 100% {\n    transform: translateY(0);\n  }\n\n  40% {\n    transform: translateY(-10px);\n  }\n\n  60% {\n    transform: translateY(-5px);\n  }\n`;\nconst fadeIn = keyframes`\n  from {\n    opacity: 0;\n  }\n  to {\n    opacity: 1;\n  }\n`;\n\nconst fadeOut = keyframes`\n  from {\n    opacity: 1;\n    height: auto;\n  }\n  to {\n    opacity: 0;\n    height: 0;\n    /* overflow: hidden; */\n  }\n`;\n\nexport const TooltipContainer = styled.div`\n  font-size: 12px;\n  position: absolute;\n  top: 65px;\n  right: 45px;\n  color: #fff;\n  padding: 8px;\n  border-radius: 45px;\n  /* background-color: #333; */\n  opacity: 0.5;\n  opacity: ${props => (props.visible ? '1' : '0')};\n  animation: ${props => (props.visible ? fadeIn : fadeOut)} 3s ease-in-out;\n  pointer-events: ${props => (props.visible ? 'auto' : 'none')};\n`;\n\nexport const StyledArrow = styled(PiArrowBendRightUpThin)`\n  width: 45px;\n  height: 35px;\n  animation: ${bounceAnimation} 1s infinite;\n`;\n","import React, { useEffect, useState } from 'react';\n\nimport { StyledArrow, TooltipContainer } from './ToolTip.styled';\n\nconst Tooltip = ({ message }) => {\n  const [visible, setVisible] = useState(true);\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setVisible(false);\n    }, 3000);\n\n    return () => {\n      clearTimeout(timer);\n    };\n  }, []);\n\n  const onAnimationEnd = () => {\n    if (!visible) {\n      setVisible(false);\n    }\n  };\n\n  return (\n    <TooltipContainer\n      style={{ display: visible ? 'block' : 'none' }}\n      onAnimationEnd={onAnimationEnd}\n    >\n      {message}\n      <StyledArrow />\n    </TooltipContainer>\n  );\n};\n\nexport default Tooltip;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.contacts;\n\nexport const selectFilter = state => state.filter;\n\nexport const selectLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase().trim())\n    );\n  }\n);\n","import { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { Conatiner, MainWrapper, Note } from '../components/App/App.styled';\nimport { Header } from 'components/ContactHeader/ContactHeader';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { LoadingSpinner } from 'components/Loader/Loader';\nimport AddContactIcon from 'components/AddContactIcon/AddContactIcon';\nimport Button from '../components/Button/Button';\nimport AddContactModal from 'components/AddContactModal/AddContactModal';\nimport Tooltip from 'components/ToolTip/ToolTip';\n\nimport {\n  selectContacts,\n  selectLoading,\n} from '../redux/contacts/contacts-selectors';\n\nimport { fetchContacts } from '../redux/contacts/contacts-operations';\nimport { selectIsLogedIn } from '../redux/auth/auth-selectors';\n\nconst Contacts = () => {\n  const [modal, setModal] = useState(false);\n\n  const contacts = useSelector(selectContacts);\n  const isLoggedin = useSelector(selectIsLogedIn);\n\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch, isLoggedin]);\n\n  const modalHandler = () => {\n    setModal(prev => !prev);\n  };\n\n  return (\n    <>\n      {isLoading && <LoadingSpinner />}\n\n      {!isLoggedin ? (\n        <h1>Please Log In</h1>\n      ) : (\n        <Conatiner>\n          {contacts.length !== 0 && <Tooltip message=\"To add contact \" />}\n          {contacts.length !== 0 && (\n            <Header text={'Contacts'}>\n              <Filter />\n              <AddContactIcon eventHandler={modalHandler} />\n            </Header>\n          )}\n          <MainWrapper className={contacts.length === 0 ? 'empty' : ''}>\n            {contacts.length === 0 ? (\n              <Note>\n                Your phonebook is empty!{' '}\n                <Button eventHandler={modalHandler} text=\"Add contact\" />\n              </Note>\n            ) : (\n              <ContactList />\n            )}\n          </MainWrapper>\n        </Conatiner>\n      )}\n      {modal && <AddContactModal closeModal={modalHandler} />}\n    </>\n  );\n};\n\nexport default Contacts;\n"],"names":["Conatiner","styled","_templateObject","_taggedTemplateLiteral","Note","_templateObject2","MainWrapper","_templateObject3","InnerHeader","Header","_ref","text","children","_jsxs","_jsx","style","margin","marginRight","List","ListHeader","_templateObject4","ListItemStyled","props","isChecked","Name","Phone","Avatar","CiUser","color","AdditionalInfo","_templateObject5","InfoItem","_templateObject6","_templateObject7","getFirstLetter","name","split","isExpanded","_useState","useState","_useState2","_slicedToArray","avatarColor","setAvatarColor","useEffect","randomColor","Math","floor","random","toString","repeat","length","getRandomColor","width","height","ListItem","id","number","handlerClick","handlerEdit","setIsChecked","_useState3","_useState4","setIsExpanded","editInfoRef","useRef","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","_useState5","_useState6","formData","setFormData","onChange","e","_e$target","value","prevData","_objectSpread","_defineProperty","_Fragment","ref","display","justifyContent","alignItems","type","checked","prevChecked","AvatarComponent","FaTrashAlt","cursor","onClick","FaUserEdit","flexDirection","gap","paddingTop","className","css","onSubmit","preventDefault","required","placeholder","selectVisibleContacts","createSelector","state","contacts","filter","contact","toLowerCase","includes","trim","ContactList","visibleContacts","useSelector","dispatch","useDispatch","isCheckedAll","setIsheckedAll","onEditContact","_asyncToGenerator","_regeneratorRuntime","_callee","data","_context","prev","next","editContact","stop","_x","apply","arguments","onDeliteContact","deleteContact","position","marginLeft","fontSize","map","_ref2","checkedAll","FilterWrapper","Input","FilterIcon","CiFilter","Filter","setFilter","currentTarget","LoaderWrapper","LoadingSpinner","Circles","AddIcon","FaPlus","Container","Button","eventHandler","fill","viewBox","xmlns","strokeLinejoin","strokeLinecap","strokeWidth","stroke","d","Overlay","closeModal","errors","setErrors","validateName","test","_objectSpread2","nanoid","reset","category","concat","IoCloseSharp","console","log","addContact","modalRoot","getElementById","window","handleKeyDown","code","createPortal","ContactFormModal","bounceAnimation","keyframes","fadeIn","fadeOut","TooltipContainer","visible","StyledArrow","PiArrowBendRightUpThin","message","setVisible","timer","setTimeout","clearTimeout","onAnimationEnd","selectContacts","selectLoading","isLoading","modal","setModal","isLoggedin","selectIsLogedIn","fetchContacts","modalHandler","Tooltip","AddContactIcon","AddContactModal"],"sourceRoot":""}